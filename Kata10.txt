Last login: Mon Feb  7 00:37:09 on ttys000

MacBook-Air-de-Gerardo:Kata 05 gerardopinedo$ cd /Users/gerardopinedo/Desktop/LaunchX/Kata\ 10
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$ python3
Python 3.10.2 (v3.10.2:a58ebcc701, Jan 13 2022, 14:50:16) [Clang 13.0.0 (clang-1300.0.29.30)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>>
>>> open("/Users/gerardopinedo/Desktop/LaunchX/Kata\ 10\Kata10.ipynb")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
FileNotFoundError: [Errno 2] No such file or directory: '/Users/gerardopinedo/Desktop/LaunchX/Kata\\ 10\\Kata10.ipynb'
>>> exit
Use exit() or Ctrl-D (i.e. EOF) to exit
>>>
>>>
>>> exit()
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$ python3
Python 3.10.2 (v3.10.2:a58ebcc701, Jan 13 2022, 14:50:16) [Clang 13.0.0 (clang-1300.0.29.30)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> open("/Users/gerardopinedo/Desktop/LaunchX/Kata\ 10\mars.jpg")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
FileNotFoundError: [Errno 2] No such file or directory: '/Users/gerardopinedo/Desktop/LaunchX/Kata\\ 10\\mars.jpg'
>>>
>>> exit()
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$ python3 open.py
Traceback (most recent call last):
  File "/Users/gerardopinedo/Desktop/LaunchX/Kata 10/open.py", line 5, in <module>
    main()
  File "/Users/gerardopinedo/Desktop/LaunchX/Kata 10/open.py", line 2, in main
    open("/Users/gerardopinedo/Desktop/LaunchX/Kata\ 10\mars.jpg")
FileNotFoundError: [Errno 2] No such file or directory: '/Users/gerardopinedo/Desktop/LaunchX/Kata\\ 10\\mars.jpg'
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$ python3
Python 3.10.2 (v3.10.2:a58ebcc701, Jan 13 2022, 14:50:16) [Clang 13.0.0 (clang-1300.0.29.30)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> try:
...     open('config.txt')
... except FileNotFoundError:
...     print("Couldn't find the config.txt file!")
...
Couldn't find the config.txt file!
>>>
>>> quit()
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$ python3 open.py
Couldn't find the config.txt file!
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$ python3 open.py
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$ python3 open.py
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$ python3 open.py
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$ python3 open.py
Found config.txt but it is a directory, couldn't read it
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$ ls -lrt config.txt
-rw-r--r--  1 gerardopinedo  staff  0 Feb 18 20:43 config.txt
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$ rm config.txt
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$ python3 open.py
Couldn't find the config.txt file!
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$
MacBook-Air-de-Gerardo:Kata 10 gerardopinedo$ python3
Python 3.10.2 (v3.10.2:a58ebcc701, Jan 13 2022, 14:50:16) [Clang 13.0.0 (clang-1300.0.29.30)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>>
>>> try:
...     open("mars.jpg")
... except FileNotFoundError as err:
...     print("gor a problem trying to read the file:", err)
...
gor a problem trying to read the file: [Errno 2] No such file or directory: 'mars.jpg'
>>>
>>> try:
...     open("config.txt")
... except OSError as err:
...     if err.errno == 2:
...             print("Couldn't find the config.txt file!")
...     elif err.errno == 13:
...             print("Found config.txt but couldn't read it")
...
Couldn't find the config.txt file!
>>>
>>> def water_left(astronauts, water_left, days_left):
...     daily_usage = astronauts * 11
...     total_usage = daily_usage * days_left
...     total_water_left = water_left - total_usage
...     return f"Total water left after  {days_left} days is: {total_water_left} litres"
...
>>> water_left (5, 100, 2)
'Total water left after  2 days is: -10 litres'
>>>
>>> def water_left(astronauts, water_left, days_left):
...     daily_usage = astronauts * 11
...     total_usage = daily_usage * days_left
...     total_water_left = water_left - ottal_usage
...     if total_water_left < 0:
...             raise RunTimeError(f"There is not enough water for {astronauts} astronauts after {days_left} days!")
...     return f"Total water left after {days_left} days is: {total_water_left} liters"
...
>>> water_left(5,100,2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 4, in water_left
NameError: name 'ottal_usage' is not defined. Did you mean: 'total_usage'?
>>>
>>> def water_left(astronauts, water_left, days_left):
...     daily_usage = astronauts * 11
...     total_usage = daily_usage * days_left
...     total_water_left = water_left - total_usage
...     if total_water_left < 0:
...             raise RunTimeError(f"There is not enough water for {astronauts} astronauts after {days_left} days!")
...     return f"Total water left after {days_left} days is: {total_water_left} liters"
...
>>> water_left(5,100,2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 6, in water_left
NameError: name 'RunTimeError' is not defined. Did you mean: 'RuntimeError'?
>>>
>>>
>>> def water_left(astronauts, water_left, days_left):
...     daily_usage = astronauts * 11
...     total_usage = daily_usage * days_left
...     total_water_left = water_left - total_usage
...     if total_water_left < 0:
...         raise RuntimeError(f"There is not enough water for {astronauts} astronauts after {days_left} days!")
...     return f"Total water left after {days_left} days is: {total_water_left} liters"
...
>>> water_left(5,100,2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 6, in water_left
RuntimeError: There is not enough water for 5 astronauts after 2 days!
>>>
>>>
>>> try:
...     water_left(5,10,2)
... except RuntimeError as err:
...     alert_navigation_system(err)
...
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
  File "<stdin>", line 6, in water_left
RuntimeError: There is not enough water for 5 astronauts after 2 days!

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 4, in <module>
NameError: name 'alert_navigation_system' is not defined
>>>
>>> water_left("3","200",None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in water_left
TypeError: can't multiply sequence by non-int of type 'NoneType'
>>>
>>>
>>> def water_left(astronauts, water_left, days_left):
...     for argument in [astronauts, water_left, days_left]:
...         try:
...             # If argument is an int, the following operation will work
...             argument / 10
...         except TypeError:
...             # TypError will be raised only if it isn't the right type
...             # Raise the same exception but with a better error message
...             raise TypeError(f"All arguments must be of type int, but received: '{argument}'")
...     daily_usage = astronauts * 11
...     total_usage = daily_usage * days_left
...     total_water_left = water_left - total_usage
...     if total_water_left < 0:
...         raise RuntimeError(f"There is not enough water for {astronauts} astronauts after {days_left} days!")
...     return f"Total water left after {days_left} days is: {total_water_left} liters"
...
>>> water_left("3","200",None)
Traceback (most recent call last):
  File "<stdin>", line 5, in water_left
TypeError: unsupported operand type(s) for /: 'str' and 'int'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 9, in water_left
TypeError: All arguments must be of type int, but received: '3'
>>>
